<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eg.egsc.scp.eventcomponent.mapper.TriggerDetailMapper">
  <resultMap id="BaseResultMap" type="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerDetail">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="trigger_id" jdbcType="VARCHAR" property="triggerId" />
    <result column="trigger_type" jdbcType="VARCHAR" property="triggerType" />
    <result column="trigger_params" jdbcType="OTHER" property="triggerParams" typeHandler="com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler" />
    <result column="to" jdbcType="VARCHAR" property="to" />
    <result column="order" jdbcType="SMALLINT" property="order" />
    <result column="court_uuid" jdbcType="VARCHAR" property="courtUuid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.triggerParamsCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler} and #{criterion.secondValue,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.triggerParamsCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler} and #{criterion.secondValue,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uuid, trigger_id, trigger_type, trigger_params, "to", "order", court_uuid, create_time,
    update_time, create_user, update_user
  </sql>
  <select id="selectByExample" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ec.trigger_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ec.trigger_detail
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ec.trigger_detail
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerDetailExample">
    delete from ec.trigger_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerDetail">
    insert into ec.trigger_detail (uuid, trigger_id, trigger_type, trigger_params,
      "to", "order", court_uuid,
      create_time, update_time, create_user, 
      update_user)
    values (#{uuid}, #{triggerId,jdbcType=VARCHAR}, #{triggerType,jdbcType=VARCHAR}, #{triggerParams,jdbcType=OTHER,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler},
      #{to,jdbcType=VARCHAR}, #{order,jdbcType=SMALLINT}, #{courtUuid,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerDetail">

    insert into ec.trigger_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="triggerId != null">
        trigger_id,
      </if>
      <if test="triggerType != null">
        trigger_type,
      </if>
      <if test="triggerParams != null">
        trigger_params,
      </if>
      <if test="to != null">
        "to",
      </if>
      <if test="order != null">
        "order",
      </if>
      <if test="courtUuid != null">
        court_uuid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="triggerId != null">
        #{triggerId,jdbcType=VARCHAR},
      </if>
      <if test="triggerType != null">
        #{triggerType,jdbcType=VARCHAR},
      </if>
      <if test="triggerParams != null">
        #{triggerParams,jdbcType=OTHER,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler},
      </if>
      <if test="to != null">
        #{to,jdbcType=VARCHAR},
      </if>
      <if test="order != null">
        #{order,jdbcType=SMALLINT},
      </if>
      <if test="courtUuid != null">
        #{courtUuid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerDetailExample" resultType="java.lang.Long">
    select count(*) from ec.trigger_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ec.trigger_detail
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerId != null">
        trigger_id = #{record.triggerId,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerType != null">
        trigger_type = #{record.triggerType,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerParams != null">
        trigger_params = #{record.triggerParams,jdbcType=OTHER,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler},
      </if>
      <if test="record.to != null">
        "to" = #{record.to,jdbcType=VARCHAR},
      </if>
      <if test="record.order != null">
        "order" = #{record.order,jdbcType=SMALLINT},
      </if>
      <if test="record.courtUuid != null">
        court_uuid = #{record.courtUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ec.trigger_detail
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      trigger_id = #{record.triggerId,jdbcType=VARCHAR},
      trigger_type = #{record.triggerType,jdbcType=VARCHAR},
      trigger_params = #{record.triggerParams,jdbcType=OTHER,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler},
      "to" = #{record.to,jdbcType=VARCHAR},
      "order" = #{record.order,jdbcType=SMALLINT},
      court_uuid = #{record.courtUuid,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerDetail">
    update ec.trigger_detail
    <set>
      <if test="triggerId != null">
        trigger_id = #{triggerId,jdbcType=VARCHAR},
      </if>
      <if test="triggerType != null">
        trigger_type = #{triggerType,jdbcType=VARCHAR},
      </if>
      <if test="triggerParams != null">
        trigger_params = #{triggerParams,jdbcType=OTHER,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler},
      </if>
      <if test="to != null">
        "to" = #{to,jdbcType=VARCHAR},
      </if>
      <if test="order != null">
        "order" = #{order,jdbcType=SMALLINT},
      </if>
      <if test="courtUuid != null">
        court_uuid = #{courtUuid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerDetail">
    update ec.trigger_detail
    set trigger_id = #{triggerId,jdbcType=VARCHAR},
      trigger_type = #{triggerType,jdbcType=VARCHAR},
      trigger_params = #{triggerParams,jdbcType=OTHER,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler},
      "to" = #{to,jdbcType=VARCHAR},
      "order" = #{order,jdbcType=SMALLINT},
      court_uuid = #{courtUuid,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>