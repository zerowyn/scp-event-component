<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eg.egsc.scp.eventcomponent.mapper.TriggerLogMapper">
  <resultMap id="BaseResultMap" type="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerLog">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="trigger_log_id" jdbcType="VARCHAR" property="triggerLogId" />
    <result column="trigger_type" jdbcType="VARCHAR" property="triggerType" />
    <result column="trigger_result" jdbcType="OTHER" property="triggerResult" typeHandler="com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler" />
    <result column="order" jdbcType="SMALLINT" property="order" />
    <result column="trigger_time" jdbcType="TIMESTAMP" property="triggerTime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="retry_count" jdbcType="INTEGER" property="retryCount" />
    <result column="event_log_id" jdbcType="VARCHAR" property="eventLogId" />
    <result column="court_uuid" jdbcType="VARCHAR" property="courtUuid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.triggerResultCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler} and #{criterion.secondValue,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.triggerResultCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler} and #{criterion.secondValue,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uuid, trigger_log_id, trigger_type, trigger_result, "order", trigger_time, creator,
    retry_count, event_log_id, court_uuid, create_time, update_time, create_user, update_user
  </sql>
  <select id="selectByExample" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ec.trigger_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ec.trigger_log
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ec.trigger_log
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerLogExample">
    delete from ec.trigger_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <select resultMap="BaseResultMap" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerLogExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ec.trigger_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <insert id="insert" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerLog">
    insert into ec.trigger_log (uuid, trigger_log_id, trigger_type, trigger_result,
      "order", trigger_time, creator,
      retry_count, event_log_id, court_uuid, 
      create_time, update_time, create_user, 
      update_user)
    values (#{uuid}, #{triggerLogId,jdbcType=VARCHAR}, #{triggerType,jdbcType=VARCHAR}, #{triggerResult,jdbcType=OTHER,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler},
      #{order,jdbcType=SMALLINT}, #{triggerTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, 
      #{retryCount,jdbcType=INTEGER}, #{eventLogId,jdbcType=VARCHAR}, #{courtUuid,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerLog">

    insert into ec.trigger_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="triggerLogId != null">
        trigger_log_id,
      </if>
      <if test="triggerType != null">
        trigger_type,
      </if>
      <if test="triggerResult != null">
        trigger_result,
      </if>
      <if test="order != null">
        "order",
      </if>
      <if test="triggerTime != null">
        trigger_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="retryCount != null">
        retry_count,
      </if>
      <if test="eventLogId != null">
        event_log_id,
      </if>
      <if test="courtUuid != null">
        court_uuid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="triggerLogId != null">
        #{triggerLogId,jdbcType=VARCHAR},
      </if>
      <if test="triggerType != null">
        #{triggerType,jdbcType=VARCHAR},
      </if>
      <if test="triggerResult != null">
        #{triggerResult,jdbcType=OTHER,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler},
      </if>
      <if test="order != null">
        #{order,jdbcType=SMALLINT},
      </if>
      <if test="triggerTime != null">
        #{triggerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="retryCount != null">
        #{retryCount,jdbcType=INTEGER},
      </if>
      <if test="eventLogId != null">
        #{eventLogId,jdbcType=VARCHAR},
      </if>
      <if test="courtUuid != null">
        #{courtUuid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerLogExample" resultType="java.lang.Long">
    select count(*) from ec.trigger_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ec.trigger_log
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerLogId != null">
        trigger_log_id = #{record.triggerLogId,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerType != null">
        trigger_type = #{record.triggerType,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerResult != null">
        trigger_result = #{record.triggerResult,jdbcType=OTHER,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler},
      </if>
      <if test="record.order != null">
        "order" = #{record.order,jdbcType=SMALLINT},
      </if>
      <if test="record.triggerTime != null">
        trigger_time = #{record.triggerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.retryCount != null">
        retry_count = #{record.retryCount,jdbcType=INTEGER},
      </if>
      <if test="record.eventLogId != null">
        event_log_id = #{record.eventLogId,jdbcType=VARCHAR},
      </if>
      <if test="record.courtUuid != null">
        court_uuid = #{record.courtUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ec.trigger_log
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      trigger_log_id = #{record.triggerLogId,jdbcType=VARCHAR},
      trigger_type = #{record.triggerType,jdbcType=VARCHAR},
      trigger_result = #{record.triggerResult,jdbcType=OTHER,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler},
      "order" = #{record.order,jdbcType=SMALLINT},
      trigger_time = #{record.triggerTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR},
      retry_count = #{record.retryCount,jdbcType=INTEGER},
      event_log_id = #{record.eventLogId,jdbcType=VARCHAR},
      court_uuid = #{record.courtUuid,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerLog">
    update ec.trigger_log
    <set>
      <if test="triggerLogId != null">
        trigger_log_id = #{triggerLogId,jdbcType=VARCHAR},
      </if>
      <if test="triggerType != null">
        trigger_type = #{triggerType,jdbcType=VARCHAR},
      </if>
      <if test="triggerResult != null">
        trigger_result = #{triggerResult,jdbcType=OTHER,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler},
      </if>
      <if test="order != null">
        "order" = #{order,jdbcType=SMALLINT},
      </if>
      <if test="triggerTime != null">
        trigger_time = #{triggerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="retryCount != null">
        retry_count = #{retryCount,jdbcType=INTEGER},
      </if>
      <if test="eventLogId != null">
        event_log_id = #{eventLogId,jdbcType=VARCHAR},
      </if>
      <if test="courtUuid != null">
        court_uuid = #{courtUuid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerLog">
    update ec.trigger_log
    set trigger_log_id = #{triggerLogId,jdbcType=VARCHAR},
      trigger_type = #{triggerType,jdbcType=VARCHAR},
      trigger_result = #{triggerResult,jdbcType=OTHER,typeHandler=com.eg.egsc.scp.eventcomponent.handler.JsonbTypeHandler},
      "order" = #{order,jdbcType=SMALLINT},
      trigger_time = #{triggerTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      retry_count = #{retryCount,jdbcType=INTEGER},
      event_log_id = #{eventLogId,jdbcType=VARCHAR},
      court_uuid = #{courtUuid,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>