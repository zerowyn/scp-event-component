<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eg.egsc.scp.eventcomponent.mapper.TriggerMapper">
  <resultMap id="BaseResultMap" type="com.eg.egsc.scp.eventcomponent.mapper.entity.Trigger">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="event_type" jdbcType="INTEGER" property="eventType" />
    <result column="event_source_code" jdbcType="VARCHAR" property="eventSourceCode" />
    <result column="is_sequential" jdbcType="BIT" property="isSequential" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="court_uuid" jdbcType="VARCHAR" property="courtUuid" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uuid, event_type, event_source_code, is_sequential, creator, court_uuid, update_time, 
    create_user, update_user, create_time
  </sql>
  <select id="selectByExample" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ec.trigger
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ec.trigger
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ec.trigger
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerExample">
    delete from ec.trigger
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.Trigger">
    insert into ec.trigger (uuid, event_type, event_source_code, is_sequential,
      creator, court_uuid, update_time, 
      create_user, update_user, create_time
      )
    values (#{uuid}, #{eventType,jdbcType=INTEGER}, #{eventSourceCode,jdbcType=VARCHAR}, #{isSequential,jdbcType=BIT},
      #{creator,jdbcType=VARCHAR}, #{courtUuid,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.Trigger">

    insert into ec.trigger
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="eventType != null">
        event_type,
      </if>
      <if test="eventSourceCode != null">
        event_source_code,
      </if>
      <if test="isSequential != null">
        is_sequential,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="courtUuid != null">
        court_uuid,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="eventType != null">
        #{eventType,jdbcType=INTEGER},
      </if>
      <if test="eventSourceCode != null">
        #{eventSourceCode,jdbcType=VARCHAR},
      </if>
      <if test="isSequential != null">
        #{isSequential,jdbcType=BIT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="courtUuid != null">
        #{courtUuid,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerExample" resultType="java.lang.Long">
    select count(*) from ec.trigger
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ec.trigger
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.eventType != null">
        event_type = #{record.eventType,jdbcType=INTEGER},
      </if>
      <if test="record.eventSourceCode != null">
        event_source_code = #{record.eventSourceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.isSequential != null">
        is_sequential = #{record.isSequential,jdbcType=BIT},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.courtUuid != null">
        court_uuid = #{record.courtUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ec.trigger
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      event_type = #{record.eventType,jdbcType=INTEGER},
      event_source_code = #{record.eventSourceCode,jdbcType=VARCHAR},
      is_sequential = #{record.isSequential,jdbcType=BIT},
      creator = #{record.creator,jdbcType=VARCHAR},
      court_uuid = #{record.courtUuid,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.Trigger">
    update ec.trigger
    <set>
      <if test="eventType != null">
        event_type = #{eventType,jdbcType=INTEGER},
      </if>
      <if test="eventSourceCode != null">
        event_source_code = #{eventSourceCode,jdbcType=VARCHAR},
      </if>
      <if test="isSequential != null">
        is_sequential = #{isSequential,jdbcType=BIT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="courtUuid != null">
        court_uuid = #{courtUuid,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.Trigger">
    update ec.trigger
    set event_type = #{eventType,jdbcType=INTEGER},
      event_source_code = #{eventSourceCode,jdbcType=VARCHAR},
      is_sequential = #{isSequential,jdbcType=BIT},
      creator = #{creator,jdbcType=VARCHAR},
      court_uuid = #{courtUuid,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>

  <select resultMap="BaseResultMap" parameterType="com.eg.egsc.scp.eventcomponent.mapper.entity.TriggerExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ec.trigger
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>